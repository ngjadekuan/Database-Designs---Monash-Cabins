-- DROP SEQUENCES

DROP SEQUENCE booking_booking_id_seq;

DROP SEQUENCE cabin_rate_period_crp_code_seq; 

DROP SEQUENCE contractor_contractor_no_seq;

DROP SEQUENCE guest_guest_no_seq;

DROP SEQUENCE manager_manager_id_seq;

DROP SEQUENCE poi_type_poi_type_code_seq;

DROP SEQUENCE point_of_interest_poi_id_seq;

DROP SEQUENCE resort_resort_id_seq;

DROP SEQUENCE review_review_id_seq;

DROP SEQUENCE town_town_id_seq;

-- Generated by Oracle SQL Developer Data Modeler 18.2.0.179.0806
--   at:        2018-09-09 19:20:05 AEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



DROP TABLE booking CASCADE CONSTRAINTS;

DROP TABLE cabin CASCADE CONSTRAINTS;

DROP TABLE cabin_clean CASCADE CONSTRAINTS;

DROP TABLE cabin_rate CASCADE CONSTRAINTS;

DROP TABLE cabin_rate_period CASCADE CONSTRAINTS;

DROP TABLE contractor CASCADE CONSTRAINTS;

DROP TABLE contractor_history CASCADE CONSTRAINTS;

DROP TABLE guest CASCADE CONSTRAINTS;

DROP TABLE manager CASCADE CONSTRAINTS;

DROP TABLE poi_type CASCADE CONSTRAINTS;

DROP TABLE point_of_interest CASCADE CONSTRAINTS;

DROP TABLE resort CASCADE CONSTRAINTS;

DROP TABLE review CASCADE CONSTRAINTS;

DROP TABLE town CASCADE CONSTRAINTS;

CREATE TABLE booking (
    booking_id           NUMBER(8) NOT NULL,
    booking_from         DATE NOT NULL,
    booking_to           DATE NOT NULL,
    booking_noadults     NUMBER(2) NOT NULL,
    booking_nochildren   NUMBER(2) NOT NULL,
    booking_nopets       NUMBER(1) NOT NULL,
    booking_charge       NUMBER(7,2) NOT NULL,
    guest_no             NUMBER(6) NOT NULL,
    cabin_no             NUMBER(3) NOT NULL,
    resort_id            NUMBER(4) NOT NULL
);

COMMENT ON COLUMN booking.booking_id IS
    'Booking identifier';

COMMENT ON COLUMN booking.booking_from IS
    'Date booking from';

COMMENT ON COLUMN booking.booking_to IS
    'Date booking to';

COMMENT ON COLUMN booking.booking_noadults IS
    'Booking number of adults';

COMMENT ON COLUMN booking.booking_nochildren IS
    'Booking number of children';

COMMENT ON COLUMN booking.booking_nopets IS
    'Booking number of pets';

COMMENT ON COLUMN booking.booking_charge IS
    'Total charge for this booking';

COMMENT ON COLUMN booking.guest_no IS
    'Guest identifier';

COMMENT ON COLUMN booking.cabin_no IS
    'Cabin number within this resort';

COMMENT ON COLUMN booking.resort_id IS
    'Resort identifier';

ALTER TABLE booking ADD CONSTRAINT booking_pk PRIMARY KEY ( booking_id );

ALTER TABLE booking
    ADD CONSTRAINT booking_nk_unique UNIQUE ( booking_from,
                                              cabin_no,
                                              resort_id );

CREATE TABLE cabin (
    cabin_no                  NUMBER(3) NOT NULL,
    resort_id                 NUMBER(4) NOT NULL,
    cabin_bedrooms            NUMBER(1) NOT NULL,
    cabin_sleeping_capacity   NUMBER(2) NOT NULL,
    cabin_description         VARCHAR2(250) NOT NULL,
    cabin_std_clean_time      NUMBER(3) NOT NULL
);

COMMENT ON COLUMN cabin.cabin_no IS
    'Cabin number within this resort';

COMMENT ON COLUMN cabin.resort_id IS
    'Resort identifier';

COMMENT ON COLUMN cabin.cabin_bedrooms IS
    'Number of bedrooms in cabin';

COMMENT ON COLUMN cabin.cabin_sleeping_capacity IS
    'Cabin Sleeping capacity';

COMMENT ON COLUMN cabin.cabin_description IS
    'Cabin description';

COMMENT ON COLUMN cabin.cabin_std_clean_time IS
    'Cabin standard cleaning time in minutes';

ALTER TABLE cabin ADD CONSTRAINT cabins_pk PRIMARY KEY ( cabin_no,
                                                         resort_id );

CREATE TABLE cabin_clean (
    cabin_no                 NUMBER(3) NOT NULL,
    resort_id                NUMBER(4) NOT NULL,
    clean_date_time          DATE NOT NULL,
    clean_time_actual_mins   DATE NOT NULL,
    clean_contract_rate      NUMBER(5,2) NOT NULL,
    clean_charge             NUMBER(5,2) NOT NULL,
    contractor_no            NUMBER(4) NOT NULL
);

COMMENT ON COLUMN cabin_clean.cabin_no IS
    'Cabin number within this resort';

COMMENT ON COLUMN cabin_clean.resort_id IS
    'Resort identifier';

COMMENT ON COLUMN cabin_clean.clean_contract_rate IS
    'Cleaning rate at which this cabin was cleaned';

COMMENT ON COLUMN cabin_clean.clean_charge IS
    'Total charged for this clean';

COMMENT ON COLUMN cabin_clean.contractor_no IS
    'Contractor identifier';

ALTER TABLE cabin_clean
    ADD CONSTRAINT cabin_clean_pk PRIMARY KEY ( cabin_no,
                                                resort_id,
                                                clean_date_time );

CREATE TABLE cabin_rate (
    cabin_no            NUMBER(3) NOT NULL,
    resort_id           NUMBER(4) NOT NULL,
    crp_code            NUMBER(4) NOT NULL,
    cabin_rate_charge   NUMBER(6,2) NOT NULL
);

COMMENT ON COLUMN cabin_rate.cabin_no IS
    'Cabin number within this resort';

COMMENT ON COLUMN cabin_rate.resort_id IS
    'Resort identifier';

COMMENT ON COLUMN cabin_rate.crp_code IS
    'Rate period identifier';

COMMENT ON COLUMN cabin_rate.cabin_rate_charge IS
    'Daily rate charged for this cabin';

ALTER TABLE cabin_rate
    ADD CONSTRAINT cabin_rate_pk PRIMARY KEY ( cabin_no,
                                               resort_id,
                                               crp_code );

CREATE TABLE cabin_rate_period (
    crp_code          NUMBER(4) NOT NULL,
    crp_description   VARCHAR2(50) NOT NULL,
    crp_start_date    DATE NOT NULL,
    crp_end_date      DATE NOT NULL
);

COMMENT ON COLUMN cabin_rate_period.crp_code IS
    'Rate period identifier';

COMMENT ON COLUMN cabin_rate_period.crp_description IS
    'Rate period description';

COMMENT ON COLUMN cabin_rate_period.crp_start_date IS
    'Date rate period starts';

COMMENT ON COLUMN cabin_rate_period.crp_end_date IS
    'Date rate period ends';

ALTER TABLE cabin_rate_period ADD CONSTRAINT cabin_rates_period_pk PRIMARY KEY ( crp_code );

CREATE TABLE contractor (
    contractor_no       NUMBER(4) NOT NULL,
    contractor_fname    VARCHAR2(50) NOT NULL,
    contractor_lname    VARCHAR2(50) NOT NULL,
    contractor_postal   VARCHAR2(50) NOT NULL,
    contractor_town     VARCHAR2(50) NOT NULL,
    contractor_pcode    CHAR(4) NOT NULL,
    contractor_phone    VARCHAR2(15) NOT NULL
);

COMMENT ON COLUMN contractor.contractor_no IS
    'Contractor identifier';

COMMENT ON COLUMN contractor.contractor_fname IS
    'Contractor given name';

COMMENT ON COLUMN contractor.contractor_lname IS
    'Contractor family name';

COMMENT ON COLUMN contractor.contractor_postal IS
    'Contractor postal address';

COMMENT ON COLUMN contractor.contractor_town IS
    'Contractor town name';

COMMENT ON COLUMN contractor.contractor_pcode IS
    'Contractor postal address post code';

COMMENT ON COLUMN contractor.contractor_phone IS
    'Contractor contact phoen number';

ALTER TABLE contractor ADD CONSTRAINT contract_cleaner_pk PRIMARY KEY ( contractor_no );

CREATE TABLE contractor_history (
    contractor_no          NUMBER(4) NOT NULL,
    contract_start_date    DATE NOT NULL,
    contract_end_date      DATE,
    contract_hrly_rate     NUMBER(5,2) NOT NULL,
    contract_type          CHAR(1) NOT NULL,
    contract_start_date1   DATE
);

ALTER TABLE contractor_history
    ADD CONSTRAINT ck_contract_type CHECK ( contract_type IN (
        'C',
        'F'
    ) );

COMMENT ON COLUMN contractor_history.contractor_no IS
    'Contractor identifier';

COMMENT ON COLUMN contractor_history.contract_type IS
    'Type of contract (Fixed or Casual)';

ALTER TABLE contractor_history ADD CONSTRAINT contractorhistory_pk PRIMARY KEY ( contractor_no,
                                                                                 contract_start_date )
                                                                                 ;

CREATE TABLE guest (
    guest_no        NUMBER(6) NOT NULL,
    guest_name      VARCHAR2(50) NOT NULL,
    guest_postal    VARCHAR2(50) NOT NULL,
    guest_town      VARCHAR2(50) NOT NULL,
    guest_pcode     VARCHAR2(20) NOT NULL,
    guest_country   VARCHAR2(50) NOT NULL,
    guest_email     VARCHAR2(50) NOT NULL,
    guest_phone     VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN guest.guest_no IS
    'Guest identifier';

COMMENT ON COLUMN guest.guest_name IS
    'Guest full name';

COMMENT ON COLUMN guest.guest_postal IS
    'Gets postal address';

COMMENT ON COLUMN guest.guest_town IS
    'Guest home town';

COMMENT ON COLUMN guest.guest_pcode IS
    'Guest  home postocde';

COMMENT ON COLUMN guest.guest_country IS
    'Guest home country';

COMMENT ON COLUMN guest.guest_email IS
    'Guest email address';

COMMENT ON COLUMN guest.guest_phone IS
    'Guest contact phone number';

ALTER TABLE guest ADD CONSTRAINT guests_pk PRIMARY KEY ( guest_no );

CREATE TABLE manager (
    manager_id       NUMBER(4) NOT NULL,
    manager_name     VARCHAR2(50) NOT NULL,
    manager_phone    VARCHAR2(15) NOT NULL,
    manager_postal   VARCHAR2(50) NOT NULL,
    manager_town     VARCHAR2(50) NOT NULL,
    manager_pcode    CHAR(4) NOT NULL
);

COMMENT ON COLUMN manager.manager_id IS
    'Manager identifier';

COMMENT ON COLUMN manager.manager_name IS
    'Managers full name';

COMMENT ON COLUMN manager.manager_phone IS
    'Managers phone mumber';

COMMENT ON COLUMN manager.manager_postal IS
    'Managers postal address';

COMMENT ON COLUMN manager.manager_town IS
    'managers postal address town';

COMMENT ON COLUMN manager.manager_pcode IS
    'Managers post address post code';

ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( manager_id );

CREATE TABLE poi_type (
    poi_type_code          NUMBER(2) NOT NULL,
    poi_type_description   VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN poi_type.poi_type_code IS
    'Code for POI type';

COMMENT ON COLUMN poi_type.poi_type_description IS
    'Description of POI type';

ALTER TABLE poi_type ADD CONSTRAINT poi_types_pk PRIMARY KEY ( poi_type_code );

CREATE TABLE point_of_interest (
    poi_id               NUMBER(5) NOT NULL,
    poi_street_address   VARCHAR2(50) NOT NULL,
    poi_name             VARCHAR2(50) NOT NULL,
    poi_description      VARCHAR2(250) NOT NULL,
    poi_open_time        DATE,
    poi_close_time       DATE,
    town_id              NUMBER(4) NOT NULL,
    poi_type_code        NUMBER(2) NOT NULL
);

COMMENT ON COLUMN point_of_interest.poi_id IS
    'POI identifer';

COMMENT ON COLUMN point_of_interest.poi_street_address IS
    'POI street address';

COMMENT ON COLUMN point_of_interest.poi_name IS
    'Name of POI';

COMMENT ON COLUMN point_of_interest.poi_description IS
    'Description of POI';

COMMENT ON COLUMN point_of_interest.poi_open_time IS
    'POI opening time';

COMMENT ON COLUMN point_of_interest.poi_close_time IS
    'POI close time';

COMMENT ON COLUMN point_of_interest.town_id IS
    'Identifier for a town (surrogate)';

COMMENT ON COLUMN point_of_interest.poi_type_code IS
    'Code for POI type';

ALTER TABLE point_of_interest ADD CONSTRAINT points_of_interest_pk PRIMARY KEY ( poi_id );

ALTER TABLE point_of_interest
    ADD CONSTRAINT poi_nk_unique UNIQUE ( poi_street_address,
                                          poi_name,
                                          town_id );

CREATE TABLE resort (
    resort_id               NUMBER(4) NOT NULL,
    resort_name             VARCHAR2(50) NOT NULL,
    resort_street_address   VARCHAR2(50) NOT NULL,
    resort_pcode            CHAR(4) NOT NULL,
    resort_star_rating      NUMBER(2,1),
    resort_pets_allowed     CHAR(1) NOT NULL,
    resort_livein_manager   CHAR(1) NOT NULL,
    town_id                 NUMBER(4) NOT NULL,
    manager_id              NUMBER(4) NOT NULL
);

ALTER TABLE resort
    ADD CONSTRAINT chk_resort_pets_allowed CHECK ( resort_pets_allowed IN (
        'N',
        'Y'
    ) );

ALTER TABLE resort
    ADD CONSTRAINT chk_resort_livein_mgr CHECK ( resort_livein_manager IN (
        'N',
        'Y'
    ) );

COMMENT ON COLUMN resort.resort_id IS
    'Resort identifier';

COMMENT ON COLUMN resort.resort_name IS
    'Resort Name';

COMMENT ON COLUMN resort.resort_street_address IS
    'Resort street address';

COMMENT ON COLUMN resort.resort_pcode IS
    'Postcode of resort';

COMMENT ON COLUMN resort.resort_star_rating IS
    'Resorts average star rating';

COMMENT ON COLUMN resort.resort_pets_allowed IS
    'Are pets allowed at this resort';

COMMENT ON COLUMN resort.resort_livein_manager IS
    'Does this resort have a live in manager';

COMMENT ON COLUMN resort.town_id IS
    'Identifier for a town (surrogate)';

COMMENT ON COLUMN resort.manager_id IS
    'Manager identifier';

ALTER TABLE resort ADD CONSTRAINT resort_pk PRIMARY KEY ( resort_id );

CREATE TABLE review (
    review_id        NUMBER(8) NOT NULL,
    review_comment   VARCHAR2(500) NOT NULL,
    review_date      DATE NOT NULL,
    review_rating    NUMBER(1) NOT NULL,
    guest_no         NUMBER(6) NOT NULL,
    resort_id        NUMBER(4) NOT NULL
);

ALTER TABLE review
    ADD CONSTRAINT ch_review_rating CHECK ( review_rating IN (
        1,
        2,
        3,
        4,
        5
    ) );

COMMENT ON COLUMN review.review_id IS
    'Review identifier';

COMMENT ON COLUMN review.review_comment IS
    'Review comment';

COMMENT ON COLUMN review.review_date IS
    'Date review was entered to the system';

COMMENT ON COLUMN review.review_rating IS
    'Review rating ( 1.. 5)';

COMMENT ON COLUMN review.guest_no IS
    'Guest identifier';

COMMENT ON COLUMN review.resort_id IS
    'Resort identifier';

ALTER TABLE review ADD CONSTRAINT review_pk PRIMARY KEY ( review_id );

ALTER TABLE review
    ADD CONSTRAINT review_nk_unique UNIQUE ( review_date,
                                             resort_id,
                                             guest_no );

CREATE TABLE town (
    town_id                NUMBER(4) NOT NULL,
    town_lat               NUMBER(9,6) NOT NULL,
    town_long              NUMBER(9,6) NOT NULL,
    town_name              VARCHAR2(50) NOT NULL,
    town_state             CHAR(3) NOT NULL,
    town_avg_summer_temp   NUMBER(3,1) NOT NULL,
    town_avg_winter_temp   NUMBER(3,1) NOT NULL,
    town_elevation         NUMBER(4) NOT NULL,
    town_population        NUMBER(7) NOT NULL
);

COMMENT ON COLUMN town.town_id IS
    'Identifier for a town (surrogate)';

COMMENT ON COLUMN town.town_lat IS
    'Latitude of town centre';

COMMENT ON COLUMN town.town_long IS
    'Longitude of town centre';

COMMENT ON COLUMN town.town_name IS
    'Town Name';

COMMENT ON COLUMN town.town_state IS
    'Town state';

COMMENT ON COLUMN town.town_avg_summer_temp IS
    'Town average sumnmer temperature';

COMMENT ON COLUMN town.town_avg_winter_temp IS
    'Town average winter temperature';

COMMENT ON COLUMN town.town_elevation IS
    'Height of town in metres above sea level ';

COMMENT ON COLUMN town.town_population IS
    'Population of town';

ALTER TABLE town ADD CONSTRAINT location_pk PRIMARY KEY ( town_id );

ALTER TABLE town ADD CONSTRAINT nk_unique UNIQUE ( town_lat,
                                                   town_long );

ALTER TABLE cabin_clean
    ADD CONSTRAINT cabin_cabin_clean FOREIGN KEY ( cabin_no,
                                                   resort_id )
        REFERENCES cabin ( cabin_no,
                           resort_id );

ALTER TABLE cabin_rate
    ADD CONSTRAINT cabin_cabin_rate FOREIGN KEY ( cabin_no,
                                                  resort_id )
        REFERENCES cabin ( cabin_no,
                           resort_id );

ALTER TABLE booking
    ADD CONSTRAINT coabin_booking FOREIGN KEY ( cabin_no,
                                                resort_id )
        REFERENCES cabin ( cabin_no,
                           resort_id );

ALTER TABLE cabin_clean
    ADD CONSTRAINT contractor_cabin_clean FOREIGN KEY ( contractor_no )
        REFERENCES contractor ( contractor_no );

ALTER TABLE contractor_history
    ADD CONSTRAINT contractor_con_history FOREIGN KEY ( contractor_no )
        REFERENCES contractor ( contractor_no );

ALTER TABLE booking
    ADD CONSTRAINT guest_booking FOREIGN KEY ( guest_no )
        REFERENCES guest ( guest_no );

ALTER TABLE review
    ADD CONSTRAINT guest_review FOREIGN KEY ( guest_no )
        REFERENCES guest ( guest_no );

ALTER TABLE resort
    ADD CONSTRAINT manager_resort FOREIGN KEY ( manager_id )
        REFERENCES manager ( manager_id );

ALTER TABLE point_of_interest
    ADD CONSTRAINT poi_type_poi FOREIGN KEY ( poi_type_code )
        REFERENCES poi_type ( poi_type_code );

ALTER TABLE cabin_rate
    ADD CONSTRAINT relation_11 FOREIGN KEY ( crp_code )
        REFERENCES cabin_rate_period ( crp_code );

ALTER TABLE cabin
    ADD CONSTRAINT resort_cabin FOREIGN KEY ( resort_id )
        REFERENCES resort ( resort_id );

ALTER TABLE review
    ADD CONSTRAINT resort_review FOREIGN KEY ( resort_id )
        REFERENCES resort ( resort_id );

ALTER TABLE point_of_interest
    ADD CONSTRAINT town_poi FOREIGN KEY ( town_id )
        REFERENCES town ( town_id );

ALTER TABLE resort
    ADD CONSTRAINT town_resort FOREIGN KEY ( town_id )
        REFERENCES town ( town_id );

CREATE SEQUENCE booking_booking_id_seq START WITH 100 NOCACHE ORDER;

CREATE SEQUENCE cabin_rate_period_crp_code_seq START WITH 100 NOCACHE ORDER;

CREATE SEQUENCE contractor_contractor_no_seq START WITH 100 NOCACHE ORDER;

CREATE SEQUENCE guest_guest_no_seq START WITH 100 NOCACHE ORDER;

CREATE SEQUENCE manager_manager_id_seq START WITH 100 NOCACHE ORDER;

CREATE SEQUENCE poi_type_poi_type_code_seq START WITH 10 NOCACHE ORDER;

CREATE SEQUENCE point_of_interest_poi_id_seq START WITH 100 NOCACHE ORDER;

CREATE SEQUENCE resort_resort_id_seq START WITH 100 NOCACHE ORDER;

CREATE SEQUENCE review_review_id_seq START WITH 100 NOCACHE ORDER;

CREATE SEQUENCE town_town_id_seq START WITH 100 NOCACHE ORDER;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            14
-- CREATE INDEX                             0
-- ALTER TABLE                             36
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         10
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
